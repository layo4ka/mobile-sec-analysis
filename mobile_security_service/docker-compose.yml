services:
  django:
    build: .
    container_name: django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - celery
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
  
  # mobsf:
  #   image: opensecurity/mobile-security-framework-mobsf:latest
  #   container_name: mobsf
  #   restart: unless-stopped
  #   ports:
  #     - "8001:8000"
  #   volumes:
  #     - mobsf_data:/home/mobsf/.MobSF
  #     - mobsf_uploads:/home/mobsf/MobSF/uploads
  #   depends_on:
  #     - redis
  celery:
    build: .
    container_name: celery
    command: celery -A mobile_security_service worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  celery-beat:
    build: .
    container_name: celery_beat
    command: celery -A mobile_security_service beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  flower:
    build: .
    container_name: flower
    command: celery -A mobile_security_service flower --port=5555
    volumes:
      - .:/app
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  redis:
    image: redis:7
    container_name: redis

    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  pgdb:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
volumes:
  pgdata:
  redis_data:
  mobsf_data:
  mobsf_uploads: